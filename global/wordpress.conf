# WordPress single blog rules.
# Designed to be included in any server {} block.

# This order might seem weird - this is attempted to match last if rules below fail.
# http://wiki.nginx.org/HttpCoreModule
location / {
	try_files $uri $uri/ /index.php?$uri&$args;
}

# Add trailing slash to */wp-admin requests.
rewrite /wp-admin$ $scheme://$host$uri/ permanent;

# Directives to send expires headers and turn off 404 error logging.
location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
	expires 365d;
	log_not_found off;
	access_log off;
}

# Uncomment one of the lines below for the appropriate caching plugin (if used).
#include global/wordpress-wp-super-cache.conf;
#include global/wordpress-w3-total-cache.conf;

# Pass all .php files onto a php-fpm/php-fcgi server.
location ~ \.php$ {
 # Setup var defaults
	set $no_cache "";
	# If non GET/HEAD, don't cache & mark user as uncacheable for 1 second via cookie
	if ($request_method !~ ^(GET|HEAD)$) {
	    set $no_cache "1";
	}
	# Drop no cache cookie if need be
	# (for some reason, add_header fails if included in prior if-block)
	if ($no_cache = "1") {
	    add_header Set-Cookie "_mcnc=1; Max-Age=2; Path=/";
	    add_header X-Microcachable "0";
	}
	if ($query_string ~ ".+") {
		set $no_cache "1";
	}
	if ($request_uri ~ "nocache") {
		set $no_cache "1";
	}
	if ($no_cache = "1") {
		return 405;
	}
	# Bypass cache if no-cache cookie is set
	if ($http_cookie ~* "_mcnc") {
		    set $no_cache "1";
	}
	# Don't cache uris containing the following segments
	if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
		set $no_cache 1;
	}   

	# Don't use the cache for logged in users or recent commenters
	if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
		set $no_cache 1;
	}

	set $memcached_key $host$request_uri;
	memcached_pass     127.0.0.1:11211;
	default_type text/html;
	error_page 404 405 502 = @php;
	expires epoch;

	# Bypass cache if flag is set
	fastcgi_no_cache $no_cache;
	fastcgi_cache_bypass $no_cache;
	fastcgi_cache microcache;
	fastcgi_cache_key $scheme$host$request_uri$request_method;
	fastcgi_cache_valid 200 301 302 10m;
	fastcgi_cache_use_stale updating error timeout invalid_header http_500;
	fastcgi_pass_header Set-Cookie;
	fastcgi_pass_header Cookie;
	fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

	# Zero-day exploit defense.
	# http://forum.nginx.org/read.php?2,88845,page=3
	# Won't work properly (404 error) if the file is not stored on this server, which is entirely possible with php-fpm/php-fcgi.
	# Comment the 'try_files' line out if you set up php-fpm/php-fcgi on another machine.  And then cross your fingers that you won't get hacked.
	try_files $uri =404;

	fastcgi_split_path_info ^(.+\.php)(.+)$;
	#NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

	include fastcgi_params;
	fastcgi_index index.php;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#	fastcgi_intercept_errors on;
	fastcgi_pass php;

	fastcgi_intercept_errors on;
	fastcgi_buffer_size 128k;
	fastcgi_buffers 256 16k;
	fastcgi_busy_buffers_size 256k;
	fastcgi_temp_file_write_size 256k;
	fastcgi_read_timeout 240;
}

location @php {
	try_files $uri =404;
	include /etc/nginx/fastcgi_params;
	fastcgi_pass php;
	fastcgi_index index.php;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	fastcgi_param PATH_INFO $fastcgi_script_name;
	fastcgi_intercept_errors on;
}
